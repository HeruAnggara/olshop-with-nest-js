// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model akun  {
  id               String   @id   
  email            String   @unique
  password         String 
  created_at       DateTime @default(now())
  updated_at       DateTime @updatedAt()
  admin            admin[] 
  users            users[] 
}

model admin {
  id               String   @id   
  akun_id          String   
  nama             String   
  avatar           String? 
  created_at       DateTime @default(now())
  updated_at       DateTime @updatedAt()
  akun             akun     @relation(fields:[akun_id], references: [id])
}

model users {
  id               String       @id   
  akun_id          String
  nama             String
  avatar           String? 
  alamat           String
  kecamatan_id     Int
  kota_id          Int
  provinsi_id      Int
  no_wa            String 
  created_at       DateTime     @default(now())
  updated_at       DateTime     @updatedAt()
  akun             akun         @relation(fields:[akun_id], references: [id])
  kota             kota         @relation(fields:[kota_id], references: [city_id])
  kecamatan        kecamatan    @relation(fields:[kecamatan_id], references: [kecamatan_id])
  provinsi         provinsi     @relation(fields:[provinsi_id], references: [province_id])
  keranjang        keranjang[]
  checkout         checkout[]
  konfirmasi       konfirmasi[]
}

model barang {
  id              String    @id
  nama_produk     String
  harga           Float     @db.Float
  harga_diskon    Float?    @db.Float
  berat           Float     @db.Float
  gambar          String
  kategori        kategori[]
  created_at      DateTime  @default(now())
  updated_at      DateTime  @updatedAt()
  keranjang       keranjang[]
  checkout        checkout[]
}

model kategori {
  id      Int    @id @default(autoincrement())
  name    String
  barang  barang[]
}

model keranjang {
  id          String    @id
  users_id    String    
  barang_id   String    
  jumlah      Int
  users       users     @relation(fields:[users_id], references: [id])
  barang      barang    @relation(fields:[barang_id], references: [id])
}

model checkout {
  id          String    @id
  users_id    String    
  barang_id   String
  total       Float     @db.Float    
  ongkir      Float     @db.Float    
  servis      String    @default("REG")   
  kurir       String    @default("jne")    
  status      Int       @default(0) 
  users       users     @relation(fields:[users_id], references: [id])
  barang      barang    @relation(fields:[barang_id], references: [id])
  konfirmasi  konfirmasi[]
}

model konfirmasi {
  id                String    @id
  users_id          String    
  checkout_id       String      
  bukti             String?
  total_transaksi   Float     @db.Float 
  users             users     @relation(fields:[users_id], references: [id])
  checkout          checkout  @relation(fields:[checkout_id], references: [id])
}

model kota {
  city_id          Int  @id 
  province_id      Int
  city_name        String?
  postal_code      String?
  provinsi         provinsi     @relation(fields:[province_id], references: [province_id])
  kecamatan        kecamatan[]
  users            users[]
}

model provinsi {
  province_id       Int     @id
  province_name     String  
  kota              kota[] 
  users             users[]
}

model kecamatan {
  kecamatan_id      Int   @id
  city_id           Int
  kecamatan_name    String
  kota              kota    @relation(fields: [city_id], references: [city_id])
  users             users[]
}